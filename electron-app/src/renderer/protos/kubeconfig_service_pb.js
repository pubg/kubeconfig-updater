// source: protos/kubeconfig_service.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var protos_common_pb = require('../protos/common_pb.js');
goog.object.extend(proto, protos_common_pb);
goog.exportSymbol('proto.kubeconfig.AggregatedClusterMetadata', null, global);
goog.exportSymbol('proto.kubeconfig.ClusterInformationStatus', null, global);
goog.exportSymbol('proto.kubeconfig.ClusterMetadata', null, global);
goog.exportSymbol('proto.kubeconfig.CredResolverConfig', null, global);
goog.exportSymbol('proto.kubeconfig.CredResolversReq', null, global);
goog.exportSymbol('proto.kubeconfig.CredentialResolverKind', null, global);
goog.exportSymbol('proto.kubeconfig.CredentialResolverStatus', null, global);
goog.exportSymbol('proto.kubeconfig.DeleteClusterReq', null, global);
goog.exportSymbol('proto.kubeconfig.DeleteCredResolverReq', null, global);
goog.exportSymbol('proto.kubeconfig.GetAvailableClustersRes', null, global);
goog.exportSymbol('proto.kubeconfig.GetConfigReq', null, global);
goog.exportSymbol('proto.kubeconfig.GetConfigRes', null, global);
goog.exportSymbol('proto.kubeconfig.GetCredResolversRes', null, global);
goog.exportSymbol('proto.kubeconfig.GetRegisteredProfilesReq', null, global);
goog.exportSymbol('proto.kubeconfig.GetRegisteredProfilesRes', null, global);
goog.exportSymbol('proto.kubeconfig.GetSupportedVendorsRes', null, global);
goog.exportSymbol('proto.kubeconfig.KubeConfigReq', null, global);
goog.exportSymbol('proto.kubeconfig.KubeConfigRes', null, global);
goog.exportSymbol('proto.kubeconfig.Profile', null, global);
goog.exportSymbol('proto.kubeconfig.RegisterClusterReq', null, global);
goog.exportSymbol('proto.kubeconfig.SetConfigReq', null, global);
goog.exportSymbol('proto.kubeconfig.Vendor', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.kubeconfig.CredResolverConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.kubeconfig.CredResolverConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.kubeconfig.CredResolverConfig.displayName = 'proto.kubeconfig.CredResolverConfig';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.kubeconfig.CredResolversReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.kubeconfig.CredResolversReq.repeatedFields_, null);
};
goog.inherits(proto.kubeconfig.CredResolversReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.kubeconfig.CredResolversReq.displayName = 'proto.kubeconfig.CredResolversReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.kubeconfig.GetCredResolversRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.kubeconfig.GetCredResolversRes.repeatedFields_, null);
};
goog.inherits(proto.kubeconfig.GetCredResolversRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.kubeconfig.GetCredResolversRes.displayName = 'proto.kubeconfig.GetCredResolversRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.kubeconfig.DeleteCredResolverReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.kubeconfig.DeleteCredResolverReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.kubeconfig.DeleteCredResolverReq.displayName = 'proto.kubeconfig.DeleteCredResolverReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.kubeconfig.GetSupportedVendorsRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.kubeconfig.GetSupportedVendorsRes.repeatedFields_, null);
};
goog.inherits(proto.kubeconfig.GetSupportedVendorsRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.kubeconfig.GetSupportedVendorsRes.displayName = 'proto.kubeconfig.GetSupportedVendorsRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.kubeconfig.Vendor = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.kubeconfig.Vendor, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.kubeconfig.Vendor.displayName = 'proto.kubeconfig.Vendor';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.kubeconfig.GetRegisteredProfilesReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.kubeconfig.GetRegisteredProfilesReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.kubeconfig.GetRegisteredProfilesReq.displayName = 'proto.kubeconfig.GetRegisteredProfilesReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.kubeconfig.GetRegisteredProfilesRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.kubeconfig.GetRegisteredProfilesRes.repeatedFields_, null);
};
goog.inherits(proto.kubeconfig.GetRegisteredProfilesRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.kubeconfig.GetRegisteredProfilesRes.displayName = 'proto.kubeconfig.GetRegisteredProfilesRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.kubeconfig.Profile = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.kubeconfig.Profile, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.kubeconfig.Profile.displayName = 'proto.kubeconfig.Profile';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.kubeconfig.KubeConfigReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.kubeconfig.KubeConfigReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.kubeconfig.KubeConfigReq.displayName = 'proto.kubeconfig.KubeConfigReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.kubeconfig.KubeConfigRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.kubeconfig.KubeConfigRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.kubeconfig.KubeConfigRes.displayName = 'proto.kubeconfig.KubeConfigRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.kubeconfig.ClusterMetadata = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.kubeconfig.ClusterMetadata, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.kubeconfig.ClusterMetadata.displayName = 'proto.kubeconfig.ClusterMetadata';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.kubeconfig.AggregatedClusterMetadata = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.kubeconfig.AggregatedClusterMetadata.repeatedFields_, null);
};
goog.inherits(proto.kubeconfig.AggregatedClusterMetadata, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.kubeconfig.AggregatedClusterMetadata.displayName = 'proto.kubeconfig.AggregatedClusterMetadata';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.kubeconfig.GetAvailableClustersRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.kubeconfig.GetAvailableClustersRes.repeatedFields_, null);
};
goog.inherits(proto.kubeconfig.GetAvailableClustersRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.kubeconfig.GetAvailableClustersRes.displayName = 'proto.kubeconfig.GetAvailableClustersRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.kubeconfig.RegisterClusterReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.kubeconfig.RegisterClusterReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.kubeconfig.RegisterClusterReq.displayName = 'proto.kubeconfig.RegisterClusterReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.kubeconfig.DeleteClusterReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.kubeconfig.DeleteClusterReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.kubeconfig.DeleteClusterReq.displayName = 'proto.kubeconfig.DeleteClusterReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.kubeconfig.GetConfigReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.kubeconfig.GetConfigReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.kubeconfig.GetConfigReq.displayName = 'proto.kubeconfig.GetConfigReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.kubeconfig.GetConfigRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.kubeconfig.GetConfigRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.kubeconfig.GetConfigRes.displayName = 'proto.kubeconfig.GetConfigRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.kubeconfig.SetConfigReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.kubeconfig.SetConfigReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.kubeconfig.SetConfigReq.displayName = 'proto.kubeconfig.SetConfigReq';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.kubeconfig.CredResolverConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.kubeconfig.CredResolverConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.kubeconfig.CredResolverConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kubeconfig.CredResolverConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    accountid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    infravendor: jspb.Message.getFieldWithDefault(msg, 3, ""),
    accountalias: jspb.Message.getFieldWithDefault(msg, 2, ""),
    kind: jspb.Message.getFieldWithDefault(msg, 4, 0),
    resolverattributesMap: (f = msg.getResolverattributesMap()) ? f.toObject(includeInstance, undefined) : [],
    status: jspb.Message.getFieldWithDefault(msg, 6, 0),
    statusdetail: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.kubeconfig.CredResolverConfig}
 */
proto.kubeconfig.CredResolverConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.kubeconfig.CredResolverConfig;
  return proto.kubeconfig.CredResolverConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.kubeconfig.CredResolverConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.kubeconfig.CredResolverConfig}
 */
proto.kubeconfig.CredResolverConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccountid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setInfravendor(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccountalias(value);
      break;
    case 4:
      var value = /** @type {!proto.kubeconfig.CredentialResolverKind} */ (reader.readEnum());
      msg.setKind(value);
      break;
    case 5:
      var value = msg.getResolverattributesMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    case 6:
      var value = /** @type {!proto.kubeconfig.CredentialResolverStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatusdetail(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.kubeconfig.CredResolverConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.kubeconfig.CredResolverConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.kubeconfig.CredResolverConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kubeconfig.CredResolverConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccountid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getInfravendor();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getAccountalias();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getKind();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getResolverattributesMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(5, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      6,
      f
    );
  }
  f = message.getStatusdetail();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional string AccountId = 1;
 * @return {string}
 */
proto.kubeconfig.CredResolverConfig.prototype.getAccountid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.kubeconfig.CredResolverConfig} returns this
 */
proto.kubeconfig.CredResolverConfig.prototype.setAccountid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string InfraVendor = 3;
 * @return {string}
 */
proto.kubeconfig.CredResolverConfig.prototype.getInfravendor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.kubeconfig.CredResolverConfig} returns this
 */
proto.kubeconfig.CredResolverConfig.prototype.setInfravendor = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string AccountAlias = 2;
 * @return {string}
 */
proto.kubeconfig.CredResolverConfig.prototype.getAccountalias = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.kubeconfig.CredResolverConfig} returns this
 */
proto.kubeconfig.CredResolverConfig.prototype.setAccountalias = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional CredentialResolverKind Kind = 4;
 * @return {!proto.kubeconfig.CredentialResolverKind}
 */
proto.kubeconfig.CredResolverConfig.prototype.getKind = function() {
  return /** @type {!proto.kubeconfig.CredentialResolverKind} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.kubeconfig.CredentialResolverKind} value
 * @return {!proto.kubeconfig.CredResolverConfig} returns this
 */
proto.kubeconfig.CredResolverConfig.prototype.setKind = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * map<string, string> ResolverAttributes = 5;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.kubeconfig.CredResolverConfig.prototype.getResolverattributesMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 5, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.kubeconfig.CredResolverConfig} returns this
 */
proto.kubeconfig.CredResolverConfig.prototype.clearResolverattributesMap = function() {
  this.getResolverattributesMap().clear();
  return this;};


/**
 * optional CredentialResolverStatus Status = 6;
 * @return {!proto.kubeconfig.CredentialResolverStatus}
 */
proto.kubeconfig.CredResolverConfig.prototype.getStatus = function() {
  return /** @type {!proto.kubeconfig.CredentialResolverStatus} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {!proto.kubeconfig.CredentialResolverStatus} value
 * @return {!proto.kubeconfig.CredResolverConfig} returns this
 */
proto.kubeconfig.CredResolverConfig.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 6, value);
};


/**
 * optional string StatusDetail = 7;
 * @return {string}
 */
proto.kubeconfig.CredResolverConfig.prototype.getStatusdetail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.kubeconfig.CredResolverConfig} returns this
 */
proto.kubeconfig.CredResolverConfig.prototype.setStatusdetail = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.kubeconfig.CredResolversReq.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.kubeconfig.CredResolversReq.prototype.toObject = function(opt_includeInstance) {
  return proto.kubeconfig.CredResolversReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.kubeconfig.CredResolversReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kubeconfig.CredResolversReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    configsList: jspb.Message.toObjectList(msg.getConfigsList(),
    proto.kubeconfig.CredResolverConfig.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.kubeconfig.CredResolversReq}
 */
proto.kubeconfig.CredResolversReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.kubeconfig.CredResolversReq;
  return proto.kubeconfig.CredResolversReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.kubeconfig.CredResolversReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.kubeconfig.CredResolversReq}
 */
proto.kubeconfig.CredResolversReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.kubeconfig.CredResolverConfig;
      reader.readMessage(value,proto.kubeconfig.CredResolverConfig.deserializeBinaryFromReader);
      msg.addConfigs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.kubeconfig.CredResolversReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.kubeconfig.CredResolversReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.kubeconfig.CredResolversReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kubeconfig.CredResolversReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConfigsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.kubeconfig.CredResolverConfig.serializeBinaryToWriter
    );
  }
};


/**
 * repeated CredResolverConfig Configs = 1;
 * @return {!Array<!proto.kubeconfig.CredResolverConfig>}
 */
proto.kubeconfig.CredResolversReq.prototype.getConfigsList = function() {
  return /** @type{!Array<!proto.kubeconfig.CredResolverConfig>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.kubeconfig.CredResolverConfig, 1));
};


/**
 * @param {!Array<!proto.kubeconfig.CredResolverConfig>} value
 * @return {!proto.kubeconfig.CredResolversReq} returns this
*/
proto.kubeconfig.CredResolversReq.prototype.setConfigsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.kubeconfig.CredResolverConfig=} opt_value
 * @param {number=} opt_index
 * @return {!proto.kubeconfig.CredResolverConfig}
 */
proto.kubeconfig.CredResolversReq.prototype.addConfigs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.kubeconfig.CredResolverConfig, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.kubeconfig.CredResolversReq} returns this
 */
proto.kubeconfig.CredResolversReq.prototype.clearConfigsList = function() {
  return this.setConfigsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.kubeconfig.GetCredResolversRes.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.kubeconfig.GetCredResolversRes.prototype.toObject = function(opt_includeInstance) {
  return proto.kubeconfig.GetCredResolversRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.kubeconfig.GetCredResolversRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kubeconfig.GetCredResolversRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    commonres: (f = msg.getCommonres()) && protos_common_pb.CommonRes.toObject(includeInstance, f),
    configsList: jspb.Message.toObjectList(msg.getConfigsList(),
    proto.kubeconfig.CredResolverConfig.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.kubeconfig.GetCredResolversRes}
 */
proto.kubeconfig.GetCredResolversRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.kubeconfig.GetCredResolversRes;
  return proto.kubeconfig.GetCredResolversRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.kubeconfig.GetCredResolversRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.kubeconfig.GetCredResolversRes}
 */
proto.kubeconfig.GetCredResolversRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new protos_common_pb.CommonRes;
      reader.readMessage(value,protos_common_pb.CommonRes.deserializeBinaryFromReader);
      msg.setCommonres(value);
      break;
    case 2:
      var value = new proto.kubeconfig.CredResolverConfig;
      reader.readMessage(value,proto.kubeconfig.CredResolverConfig.deserializeBinaryFromReader);
      msg.addConfigs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.kubeconfig.GetCredResolversRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.kubeconfig.GetCredResolversRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.kubeconfig.GetCredResolversRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kubeconfig.GetCredResolversRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCommonres();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      protos_common_pb.CommonRes.serializeBinaryToWriter
    );
  }
  f = message.getConfigsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.kubeconfig.CredResolverConfig.serializeBinaryToWriter
    );
  }
};


/**
 * optional CommonRes CommonRes = 1;
 * @return {?proto.kubeconfig.CommonRes}
 */
proto.kubeconfig.GetCredResolversRes.prototype.getCommonres = function() {
  return /** @type{?proto.kubeconfig.CommonRes} */ (
    jspb.Message.getWrapperField(this, protos_common_pb.CommonRes, 1));
};


/**
 * @param {?proto.kubeconfig.CommonRes|undefined} value
 * @return {!proto.kubeconfig.GetCredResolversRes} returns this
*/
proto.kubeconfig.GetCredResolversRes.prototype.setCommonres = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.kubeconfig.GetCredResolversRes} returns this
 */
proto.kubeconfig.GetCredResolversRes.prototype.clearCommonres = function() {
  return this.setCommonres(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.kubeconfig.GetCredResolversRes.prototype.hasCommonres = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated CredResolverConfig Configs = 2;
 * @return {!Array<!proto.kubeconfig.CredResolverConfig>}
 */
proto.kubeconfig.GetCredResolversRes.prototype.getConfigsList = function() {
  return /** @type{!Array<!proto.kubeconfig.CredResolverConfig>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.kubeconfig.CredResolverConfig, 2));
};


/**
 * @param {!Array<!proto.kubeconfig.CredResolverConfig>} value
 * @return {!proto.kubeconfig.GetCredResolversRes} returns this
*/
proto.kubeconfig.GetCredResolversRes.prototype.setConfigsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.kubeconfig.CredResolverConfig=} opt_value
 * @param {number=} opt_index
 * @return {!proto.kubeconfig.CredResolverConfig}
 */
proto.kubeconfig.GetCredResolversRes.prototype.addConfigs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.kubeconfig.CredResolverConfig, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.kubeconfig.GetCredResolversRes} returns this
 */
proto.kubeconfig.GetCredResolversRes.prototype.clearConfigsList = function() {
  return this.setConfigsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.kubeconfig.DeleteCredResolverReq.prototype.toObject = function(opt_includeInstance) {
  return proto.kubeconfig.DeleteCredResolverReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.kubeconfig.DeleteCredResolverReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kubeconfig.DeleteCredResolverReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    accountid: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.kubeconfig.DeleteCredResolverReq}
 */
proto.kubeconfig.DeleteCredResolverReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.kubeconfig.DeleteCredResolverReq;
  return proto.kubeconfig.DeleteCredResolverReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.kubeconfig.DeleteCredResolverReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.kubeconfig.DeleteCredResolverReq}
 */
proto.kubeconfig.DeleteCredResolverReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccountid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.kubeconfig.DeleteCredResolverReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.kubeconfig.DeleteCredResolverReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.kubeconfig.DeleteCredResolverReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kubeconfig.DeleteCredResolverReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccountid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string AccountId = 1;
 * @return {string}
 */
proto.kubeconfig.DeleteCredResolverReq.prototype.getAccountid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.kubeconfig.DeleteCredResolverReq} returns this
 */
proto.kubeconfig.DeleteCredResolverReq.prototype.setAccountid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.kubeconfig.GetSupportedVendorsRes.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.kubeconfig.GetSupportedVendorsRes.prototype.toObject = function(opt_includeInstance) {
  return proto.kubeconfig.GetSupportedVendorsRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.kubeconfig.GetSupportedVendorsRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kubeconfig.GetSupportedVendorsRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    commonres: (f = msg.getCommonres()) && protos_common_pb.CommonRes.toObject(includeInstance, f),
    vendorsList: jspb.Message.toObjectList(msg.getVendorsList(),
    proto.kubeconfig.Vendor.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.kubeconfig.GetSupportedVendorsRes}
 */
proto.kubeconfig.GetSupportedVendorsRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.kubeconfig.GetSupportedVendorsRes;
  return proto.kubeconfig.GetSupportedVendorsRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.kubeconfig.GetSupportedVendorsRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.kubeconfig.GetSupportedVendorsRes}
 */
proto.kubeconfig.GetSupportedVendorsRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new protos_common_pb.CommonRes;
      reader.readMessage(value,protos_common_pb.CommonRes.deserializeBinaryFromReader);
      msg.setCommonres(value);
      break;
    case 2:
      var value = new proto.kubeconfig.Vendor;
      reader.readMessage(value,proto.kubeconfig.Vendor.deserializeBinaryFromReader);
      msg.addVendors(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.kubeconfig.GetSupportedVendorsRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.kubeconfig.GetSupportedVendorsRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.kubeconfig.GetSupportedVendorsRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kubeconfig.GetSupportedVendorsRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCommonres();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      protos_common_pb.CommonRes.serializeBinaryToWriter
    );
  }
  f = message.getVendorsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.kubeconfig.Vendor.serializeBinaryToWriter
    );
  }
};


/**
 * optional CommonRes CommonRes = 1;
 * @return {?proto.kubeconfig.CommonRes}
 */
proto.kubeconfig.GetSupportedVendorsRes.prototype.getCommonres = function() {
  return /** @type{?proto.kubeconfig.CommonRes} */ (
    jspb.Message.getWrapperField(this, protos_common_pb.CommonRes, 1));
};


/**
 * @param {?proto.kubeconfig.CommonRes|undefined} value
 * @return {!proto.kubeconfig.GetSupportedVendorsRes} returns this
*/
proto.kubeconfig.GetSupportedVendorsRes.prototype.setCommonres = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.kubeconfig.GetSupportedVendorsRes} returns this
 */
proto.kubeconfig.GetSupportedVendorsRes.prototype.clearCommonres = function() {
  return this.setCommonres(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.kubeconfig.GetSupportedVendorsRes.prototype.hasCommonres = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated Vendor Vendors = 2;
 * @return {!Array<!proto.kubeconfig.Vendor>}
 */
proto.kubeconfig.GetSupportedVendorsRes.prototype.getVendorsList = function() {
  return /** @type{!Array<!proto.kubeconfig.Vendor>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.kubeconfig.Vendor, 2));
};


/**
 * @param {!Array<!proto.kubeconfig.Vendor>} value
 * @return {!proto.kubeconfig.GetSupportedVendorsRes} returns this
*/
proto.kubeconfig.GetSupportedVendorsRes.prototype.setVendorsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.kubeconfig.Vendor=} opt_value
 * @param {number=} opt_index
 * @return {!proto.kubeconfig.Vendor}
 */
proto.kubeconfig.GetSupportedVendorsRes.prototype.addVendors = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.kubeconfig.Vendor, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.kubeconfig.GetSupportedVendorsRes} returns this
 */
proto.kubeconfig.GetSupportedVendorsRes.prototype.clearVendorsList = function() {
  return this.setVendorsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.kubeconfig.Vendor.prototype.toObject = function(opt_includeInstance) {
  return proto.kubeconfig.Vendor.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.kubeconfig.Vendor} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kubeconfig.Vendor.toObject = function(includeInstance, msg) {
  var f, obj = {
    vendorname: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.kubeconfig.Vendor}
 */
proto.kubeconfig.Vendor.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.kubeconfig.Vendor;
  return proto.kubeconfig.Vendor.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.kubeconfig.Vendor} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.kubeconfig.Vendor}
 */
proto.kubeconfig.Vendor.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setVendorname(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.kubeconfig.Vendor.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.kubeconfig.Vendor.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.kubeconfig.Vendor} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kubeconfig.Vendor.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVendorname();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string VendorName = 1;
 * @return {string}
 */
proto.kubeconfig.Vendor.prototype.getVendorname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.kubeconfig.Vendor} returns this
 */
proto.kubeconfig.Vendor.prototype.setVendorname = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.kubeconfig.GetRegisteredProfilesReq.prototype.toObject = function(opt_includeInstance) {
  return proto.kubeconfig.GetRegisteredProfilesReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.kubeconfig.GetRegisteredProfilesReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kubeconfig.GetRegisteredProfilesReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    infravendor: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.kubeconfig.GetRegisteredProfilesReq}
 */
proto.kubeconfig.GetRegisteredProfilesReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.kubeconfig.GetRegisteredProfilesReq;
  return proto.kubeconfig.GetRegisteredProfilesReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.kubeconfig.GetRegisteredProfilesReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.kubeconfig.GetRegisteredProfilesReq}
 */
proto.kubeconfig.GetRegisteredProfilesReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setInfravendor(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.kubeconfig.GetRegisteredProfilesReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.kubeconfig.GetRegisteredProfilesReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.kubeconfig.GetRegisteredProfilesReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kubeconfig.GetRegisteredProfilesReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInfravendor();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string InfraVendor = 1;
 * @return {string}
 */
proto.kubeconfig.GetRegisteredProfilesReq.prototype.getInfravendor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.kubeconfig.GetRegisteredProfilesReq} returns this
 */
proto.kubeconfig.GetRegisteredProfilesReq.prototype.setInfravendor = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.kubeconfig.GetRegisteredProfilesRes.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.kubeconfig.GetRegisteredProfilesRes.prototype.toObject = function(opt_includeInstance) {
  return proto.kubeconfig.GetRegisteredProfilesRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.kubeconfig.GetRegisteredProfilesRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kubeconfig.GetRegisteredProfilesRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    commonres: (f = msg.getCommonres()) && protos_common_pb.CommonRes.toObject(includeInstance, f),
    profilesList: jspb.Message.toObjectList(msg.getProfilesList(),
    proto.kubeconfig.Profile.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.kubeconfig.GetRegisteredProfilesRes}
 */
proto.kubeconfig.GetRegisteredProfilesRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.kubeconfig.GetRegisteredProfilesRes;
  return proto.kubeconfig.GetRegisteredProfilesRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.kubeconfig.GetRegisteredProfilesRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.kubeconfig.GetRegisteredProfilesRes}
 */
proto.kubeconfig.GetRegisteredProfilesRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new protos_common_pb.CommonRes;
      reader.readMessage(value,protos_common_pb.CommonRes.deserializeBinaryFromReader);
      msg.setCommonres(value);
      break;
    case 2:
      var value = new proto.kubeconfig.Profile;
      reader.readMessage(value,proto.kubeconfig.Profile.deserializeBinaryFromReader);
      msg.addProfiles(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.kubeconfig.GetRegisteredProfilesRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.kubeconfig.GetRegisteredProfilesRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.kubeconfig.GetRegisteredProfilesRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kubeconfig.GetRegisteredProfilesRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCommonres();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      protos_common_pb.CommonRes.serializeBinaryToWriter
    );
  }
  f = message.getProfilesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.kubeconfig.Profile.serializeBinaryToWriter
    );
  }
};


/**
 * optional CommonRes CommonRes = 1;
 * @return {?proto.kubeconfig.CommonRes}
 */
proto.kubeconfig.GetRegisteredProfilesRes.prototype.getCommonres = function() {
  return /** @type{?proto.kubeconfig.CommonRes} */ (
    jspb.Message.getWrapperField(this, protos_common_pb.CommonRes, 1));
};


/**
 * @param {?proto.kubeconfig.CommonRes|undefined} value
 * @return {!proto.kubeconfig.GetRegisteredProfilesRes} returns this
*/
proto.kubeconfig.GetRegisteredProfilesRes.prototype.setCommonres = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.kubeconfig.GetRegisteredProfilesRes} returns this
 */
proto.kubeconfig.GetRegisteredProfilesRes.prototype.clearCommonres = function() {
  return this.setCommonres(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.kubeconfig.GetRegisteredProfilesRes.prototype.hasCommonres = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated Profile profiles = 2;
 * @return {!Array<!proto.kubeconfig.Profile>}
 */
proto.kubeconfig.GetRegisteredProfilesRes.prototype.getProfilesList = function() {
  return /** @type{!Array<!proto.kubeconfig.Profile>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.kubeconfig.Profile, 2));
};


/**
 * @param {!Array<!proto.kubeconfig.Profile>} value
 * @return {!proto.kubeconfig.GetRegisteredProfilesRes} returns this
*/
proto.kubeconfig.GetRegisteredProfilesRes.prototype.setProfilesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.kubeconfig.Profile=} opt_value
 * @param {number=} opt_index
 * @return {!proto.kubeconfig.Profile}
 */
proto.kubeconfig.GetRegisteredProfilesRes.prototype.addProfiles = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.kubeconfig.Profile, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.kubeconfig.GetRegisteredProfilesRes} returns this
 */
proto.kubeconfig.GetRegisteredProfilesRes.prototype.clearProfilesList = function() {
  return this.setProfilesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.kubeconfig.Profile.prototype.toObject = function(opt_includeInstance) {
  return proto.kubeconfig.Profile.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.kubeconfig.Profile} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kubeconfig.Profile.toObject = function(includeInstance, msg) {
  var f, obj = {
    profilename: jspb.Message.getFieldWithDefault(msg, 1, ""),
    accountid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    infravendor: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.kubeconfig.Profile}
 */
proto.kubeconfig.Profile.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.kubeconfig.Profile;
  return proto.kubeconfig.Profile.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.kubeconfig.Profile} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.kubeconfig.Profile}
 */
proto.kubeconfig.Profile.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setProfilename(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccountid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setInfravendor(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.kubeconfig.Profile.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.kubeconfig.Profile.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.kubeconfig.Profile} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kubeconfig.Profile.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProfilename();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAccountid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getInfravendor();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string ProfileName = 1;
 * @return {string}
 */
proto.kubeconfig.Profile.prototype.getProfilename = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.kubeconfig.Profile} returns this
 */
proto.kubeconfig.Profile.prototype.setProfilename = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string AccountId = 2;
 * @return {string}
 */
proto.kubeconfig.Profile.prototype.getAccountid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.kubeconfig.Profile} returns this
 */
proto.kubeconfig.Profile.prototype.setAccountid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string InfraVendor = 3;
 * @return {string}
 */
proto.kubeconfig.Profile.prototype.getInfravendor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.kubeconfig.Profile} returns this
 */
proto.kubeconfig.Profile.prototype.setInfravendor = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.kubeconfig.KubeConfigReq.prototype.toObject = function(opt_includeInstance) {
  return proto.kubeconfig.KubeConfigReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.kubeconfig.KubeConfigReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kubeconfig.KubeConfigReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    commonreq: (f = msg.getCommonreq()) && protos_common_pb.CommonReq.toObject(includeInstance, f),
    config: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.kubeconfig.KubeConfigReq}
 */
proto.kubeconfig.KubeConfigReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.kubeconfig.KubeConfigReq;
  return proto.kubeconfig.KubeConfigReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.kubeconfig.KubeConfigReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.kubeconfig.KubeConfigReq}
 */
proto.kubeconfig.KubeConfigReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new protos_common_pb.CommonReq;
      reader.readMessage(value,protos_common_pb.CommonReq.deserializeBinaryFromReader);
      msg.setCommonreq(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setConfig(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.kubeconfig.KubeConfigReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.kubeconfig.KubeConfigReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.kubeconfig.KubeConfigReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kubeconfig.KubeConfigReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCommonreq();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      protos_common_pb.CommonReq.serializeBinaryToWriter
    );
  }
  f = message.getConfig();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional CommonReq CommonReq = 1;
 * @return {?proto.kubeconfig.CommonReq}
 */
proto.kubeconfig.KubeConfigReq.prototype.getCommonreq = function() {
  return /** @type{?proto.kubeconfig.CommonReq} */ (
    jspb.Message.getWrapperField(this, protos_common_pb.CommonReq, 1));
};


/**
 * @param {?proto.kubeconfig.CommonReq|undefined} value
 * @return {!proto.kubeconfig.KubeConfigReq} returns this
*/
proto.kubeconfig.KubeConfigReq.prototype.setCommonreq = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.kubeconfig.KubeConfigReq} returns this
 */
proto.kubeconfig.KubeConfigReq.prototype.clearCommonreq = function() {
  return this.setCommonreq(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.kubeconfig.KubeConfigReq.prototype.hasCommonreq = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string Config = 2;
 * @return {string}
 */
proto.kubeconfig.KubeConfigReq.prototype.getConfig = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.kubeconfig.KubeConfigReq} returns this
 */
proto.kubeconfig.KubeConfigReq.prototype.setConfig = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.kubeconfig.KubeConfigRes.prototype.toObject = function(opt_includeInstance) {
  return proto.kubeconfig.KubeConfigRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.kubeconfig.KubeConfigRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kubeconfig.KubeConfigRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    commonres: (f = msg.getCommonres()) && protos_common_pb.CommonRes.toObject(includeInstance, f),
    config: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.kubeconfig.KubeConfigRes}
 */
proto.kubeconfig.KubeConfigRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.kubeconfig.KubeConfigRes;
  return proto.kubeconfig.KubeConfigRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.kubeconfig.KubeConfigRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.kubeconfig.KubeConfigRes}
 */
proto.kubeconfig.KubeConfigRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new protos_common_pb.CommonRes;
      reader.readMessage(value,protos_common_pb.CommonRes.deserializeBinaryFromReader);
      msg.setCommonres(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setConfig(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.kubeconfig.KubeConfigRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.kubeconfig.KubeConfigRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.kubeconfig.KubeConfigRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kubeconfig.KubeConfigRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCommonres();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      protos_common_pb.CommonRes.serializeBinaryToWriter
    );
  }
  f = message.getConfig();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional CommonRes CommonRes = 1;
 * @return {?proto.kubeconfig.CommonRes}
 */
proto.kubeconfig.KubeConfigRes.prototype.getCommonres = function() {
  return /** @type{?proto.kubeconfig.CommonRes} */ (
    jspb.Message.getWrapperField(this, protos_common_pb.CommonRes, 1));
};


/**
 * @param {?proto.kubeconfig.CommonRes|undefined} value
 * @return {!proto.kubeconfig.KubeConfigRes} returns this
*/
proto.kubeconfig.KubeConfigRes.prototype.setCommonres = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.kubeconfig.KubeConfigRes} returns this
 */
proto.kubeconfig.KubeConfigRes.prototype.clearCommonres = function() {
  return this.setCommonres(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.kubeconfig.KubeConfigRes.prototype.hasCommonres = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string Config = 2;
 * @return {string}
 */
proto.kubeconfig.KubeConfigRes.prototype.getConfig = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.kubeconfig.KubeConfigRes} returns this
 */
proto.kubeconfig.KubeConfigRes.prototype.setConfig = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.kubeconfig.ClusterMetadata.prototype.toObject = function(opt_includeInstance) {
  return proto.kubeconfig.ClusterMetadata.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.kubeconfig.ClusterMetadata} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kubeconfig.ClusterMetadata.toObject = function(includeInstance, msg) {
  var f, obj = {
    clustername: jspb.Message.getFieldWithDefault(msg, 1, ""),
    credresolverid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    clustertagsMap: (f = msg.getClustertagsMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.kubeconfig.ClusterMetadata}
 */
proto.kubeconfig.ClusterMetadata.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.kubeconfig.ClusterMetadata;
  return proto.kubeconfig.ClusterMetadata.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.kubeconfig.ClusterMetadata} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.kubeconfig.ClusterMetadata}
 */
proto.kubeconfig.ClusterMetadata.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setClustername(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCredresolverid(value);
      break;
    case 3:
      var value = msg.getClustertagsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.kubeconfig.ClusterMetadata.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.kubeconfig.ClusterMetadata.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.kubeconfig.ClusterMetadata} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kubeconfig.ClusterMetadata.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClustername();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCredresolverid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getClustertagsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(3, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * optional string ClusterName = 1;
 * @return {string}
 */
proto.kubeconfig.ClusterMetadata.prototype.getClustername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.kubeconfig.ClusterMetadata} returns this
 */
proto.kubeconfig.ClusterMetadata.prototype.setClustername = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string CredResolverId = 2;
 * @return {string}
 */
proto.kubeconfig.ClusterMetadata.prototype.getCredresolverid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.kubeconfig.ClusterMetadata} returns this
 */
proto.kubeconfig.ClusterMetadata.prototype.setCredresolverid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * map<string, string> ClusterTags = 3;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.kubeconfig.ClusterMetadata.prototype.getClustertagsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 3, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.kubeconfig.ClusterMetadata} returns this
 */
proto.kubeconfig.ClusterMetadata.prototype.clearClustertagsMap = function() {
  this.getClustertagsMap().clear();
  return this;};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.kubeconfig.AggregatedClusterMetadata.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.kubeconfig.AggregatedClusterMetadata.prototype.toObject = function(opt_includeInstance) {
  return proto.kubeconfig.AggregatedClusterMetadata.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.kubeconfig.AggregatedClusterMetadata} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kubeconfig.AggregatedClusterMetadata.toObject = function(includeInstance, msg) {
  var f, obj = {
    metadata: (f = msg.getMetadata()) && proto.kubeconfig.ClusterMetadata.toObject(includeInstance, f),
    dataresolversList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
    status: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.kubeconfig.AggregatedClusterMetadata}
 */
proto.kubeconfig.AggregatedClusterMetadata.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.kubeconfig.AggregatedClusterMetadata;
  return proto.kubeconfig.AggregatedClusterMetadata.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.kubeconfig.AggregatedClusterMetadata} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.kubeconfig.AggregatedClusterMetadata}
 */
proto.kubeconfig.AggregatedClusterMetadata.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.kubeconfig.ClusterMetadata;
      reader.readMessage(value,proto.kubeconfig.ClusterMetadata.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addDataresolvers(value);
      break;
    case 3:
      var value = /** @type {!proto.kubeconfig.ClusterInformationStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.kubeconfig.AggregatedClusterMetadata.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.kubeconfig.AggregatedClusterMetadata.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.kubeconfig.AggregatedClusterMetadata} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kubeconfig.AggregatedClusterMetadata.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.kubeconfig.ClusterMetadata.serializeBinaryToWriter
    );
  }
  f = message.getDataresolversList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
};


/**
 * optional ClusterMetadata Metadata = 1;
 * @return {?proto.kubeconfig.ClusterMetadata}
 */
proto.kubeconfig.AggregatedClusterMetadata.prototype.getMetadata = function() {
  return /** @type{?proto.kubeconfig.ClusterMetadata} */ (
    jspb.Message.getWrapperField(this, proto.kubeconfig.ClusterMetadata, 1));
};


/**
 * @param {?proto.kubeconfig.ClusterMetadata|undefined} value
 * @return {!proto.kubeconfig.AggregatedClusterMetadata} returns this
*/
proto.kubeconfig.AggregatedClusterMetadata.prototype.setMetadata = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.kubeconfig.AggregatedClusterMetadata} returns this
 */
proto.kubeconfig.AggregatedClusterMetadata.prototype.clearMetadata = function() {
  return this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.kubeconfig.AggregatedClusterMetadata.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated string DataResolvers = 2;
 * @return {!Array<string>}
 */
proto.kubeconfig.AggregatedClusterMetadata.prototype.getDataresolversList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.kubeconfig.AggregatedClusterMetadata} returns this
 */
proto.kubeconfig.AggregatedClusterMetadata.prototype.setDataresolversList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.kubeconfig.AggregatedClusterMetadata} returns this
 */
proto.kubeconfig.AggregatedClusterMetadata.prototype.addDataresolvers = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.kubeconfig.AggregatedClusterMetadata} returns this
 */
proto.kubeconfig.AggregatedClusterMetadata.prototype.clearDataresolversList = function() {
  return this.setDataresolversList([]);
};


/**
 * optional ClusterInformationStatus Status = 3;
 * @return {!proto.kubeconfig.ClusterInformationStatus}
 */
proto.kubeconfig.AggregatedClusterMetadata.prototype.getStatus = function() {
  return /** @type {!proto.kubeconfig.ClusterInformationStatus} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.kubeconfig.ClusterInformationStatus} value
 * @return {!proto.kubeconfig.AggregatedClusterMetadata} returns this
 */
proto.kubeconfig.AggregatedClusterMetadata.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.kubeconfig.GetAvailableClustersRes.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.kubeconfig.GetAvailableClustersRes.prototype.toObject = function(opt_includeInstance) {
  return proto.kubeconfig.GetAvailableClustersRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.kubeconfig.GetAvailableClustersRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kubeconfig.GetAvailableClustersRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    commonres: (f = msg.getCommonres()) && protos_common_pb.CommonRes.toObject(includeInstance, f),
    clustersList: jspb.Message.toObjectList(msg.getClustersList(),
    proto.kubeconfig.AggregatedClusterMetadata.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.kubeconfig.GetAvailableClustersRes}
 */
proto.kubeconfig.GetAvailableClustersRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.kubeconfig.GetAvailableClustersRes;
  return proto.kubeconfig.GetAvailableClustersRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.kubeconfig.GetAvailableClustersRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.kubeconfig.GetAvailableClustersRes}
 */
proto.kubeconfig.GetAvailableClustersRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new protos_common_pb.CommonRes;
      reader.readMessage(value,protos_common_pb.CommonRes.deserializeBinaryFromReader);
      msg.setCommonres(value);
      break;
    case 2:
      var value = new proto.kubeconfig.AggregatedClusterMetadata;
      reader.readMessage(value,proto.kubeconfig.AggregatedClusterMetadata.deserializeBinaryFromReader);
      msg.addClusters(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.kubeconfig.GetAvailableClustersRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.kubeconfig.GetAvailableClustersRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.kubeconfig.GetAvailableClustersRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kubeconfig.GetAvailableClustersRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCommonres();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      protos_common_pb.CommonRes.serializeBinaryToWriter
    );
  }
  f = message.getClustersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.kubeconfig.AggregatedClusterMetadata.serializeBinaryToWriter
    );
  }
};


/**
 * optional CommonRes CommonRes = 1;
 * @return {?proto.kubeconfig.CommonRes}
 */
proto.kubeconfig.GetAvailableClustersRes.prototype.getCommonres = function() {
  return /** @type{?proto.kubeconfig.CommonRes} */ (
    jspb.Message.getWrapperField(this, protos_common_pb.CommonRes, 1));
};


/**
 * @param {?proto.kubeconfig.CommonRes|undefined} value
 * @return {!proto.kubeconfig.GetAvailableClustersRes} returns this
*/
proto.kubeconfig.GetAvailableClustersRes.prototype.setCommonres = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.kubeconfig.GetAvailableClustersRes} returns this
 */
proto.kubeconfig.GetAvailableClustersRes.prototype.clearCommonres = function() {
  return this.setCommonres(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.kubeconfig.GetAvailableClustersRes.prototype.hasCommonres = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated AggregatedClusterMetadata Clusters = 2;
 * @return {!Array<!proto.kubeconfig.AggregatedClusterMetadata>}
 */
proto.kubeconfig.GetAvailableClustersRes.prototype.getClustersList = function() {
  return /** @type{!Array<!proto.kubeconfig.AggregatedClusterMetadata>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.kubeconfig.AggregatedClusterMetadata, 2));
};


/**
 * @param {!Array<!proto.kubeconfig.AggregatedClusterMetadata>} value
 * @return {!proto.kubeconfig.GetAvailableClustersRes} returns this
*/
proto.kubeconfig.GetAvailableClustersRes.prototype.setClustersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.kubeconfig.AggregatedClusterMetadata=} opt_value
 * @param {number=} opt_index
 * @return {!proto.kubeconfig.AggregatedClusterMetadata}
 */
proto.kubeconfig.GetAvailableClustersRes.prototype.addClusters = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.kubeconfig.AggregatedClusterMetadata, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.kubeconfig.GetAvailableClustersRes} returns this
 */
proto.kubeconfig.GetAvailableClustersRes.prototype.clearClustersList = function() {
  return this.setClustersList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.kubeconfig.RegisterClusterReq.prototype.toObject = function(opt_includeInstance) {
  return proto.kubeconfig.RegisterClusterReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.kubeconfig.RegisterClusterReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kubeconfig.RegisterClusterReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    commonreq: (f = msg.getCommonreq()) && protos_common_pb.CommonReq.toObject(includeInstance, f),
    clustername: jspb.Message.getFieldWithDefault(msg, 2, ""),
    accountid: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.kubeconfig.RegisterClusterReq}
 */
proto.kubeconfig.RegisterClusterReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.kubeconfig.RegisterClusterReq;
  return proto.kubeconfig.RegisterClusterReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.kubeconfig.RegisterClusterReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.kubeconfig.RegisterClusterReq}
 */
proto.kubeconfig.RegisterClusterReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new protos_common_pb.CommonReq;
      reader.readMessage(value,protos_common_pb.CommonReq.deserializeBinaryFromReader);
      msg.setCommonreq(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setClustername(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccountid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.kubeconfig.RegisterClusterReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.kubeconfig.RegisterClusterReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.kubeconfig.RegisterClusterReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kubeconfig.RegisterClusterReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCommonreq();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      protos_common_pb.CommonReq.serializeBinaryToWriter
    );
  }
  f = message.getClustername();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAccountid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional CommonReq CommonReq = 1;
 * @return {?proto.kubeconfig.CommonReq}
 */
proto.kubeconfig.RegisterClusterReq.prototype.getCommonreq = function() {
  return /** @type{?proto.kubeconfig.CommonReq} */ (
    jspb.Message.getWrapperField(this, protos_common_pb.CommonReq, 1));
};


/**
 * @param {?proto.kubeconfig.CommonReq|undefined} value
 * @return {!proto.kubeconfig.RegisterClusterReq} returns this
*/
proto.kubeconfig.RegisterClusterReq.prototype.setCommonreq = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.kubeconfig.RegisterClusterReq} returns this
 */
proto.kubeconfig.RegisterClusterReq.prototype.clearCommonreq = function() {
  return this.setCommonreq(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.kubeconfig.RegisterClusterReq.prototype.hasCommonreq = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string ClusterName = 2;
 * @return {string}
 */
proto.kubeconfig.RegisterClusterReq.prototype.getClustername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.kubeconfig.RegisterClusterReq} returns this
 */
proto.kubeconfig.RegisterClusterReq.prototype.setClustername = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string AccountId = 3;
 * @return {string}
 */
proto.kubeconfig.RegisterClusterReq.prototype.getAccountid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.kubeconfig.RegisterClusterReq} returns this
 */
proto.kubeconfig.RegisterClusterReq.prototype.setAccountid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.kubeconfig.DeleteClusterReq.prototype.toObject = function(opt_includeInstance) {
  return proto.kubeconfig.DeleteClusterReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.kubeconfig.DeleteClusterReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kubeconfig.DeleteClusterReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    commonreq: (f = msg.getCommonreq()) && protos_common_pb.CommonReq.toObject(includeInstance, f),
    clustername: jspb.Message.getFieldWithDefault(msg, 2, ""),
    cascade: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.kubeconfig.DeleteClusterReq}
 */
proto.kubeconfig.DeleteClusterReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.kubeconfig.DeleteClusterReq;
  return proto.kubeconfig.DeleteClusterReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.kubeconfig.DeleteClusterReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.kubeconfig.DeleteClusterReq}
 */
proto.kubeconfig.DeleteClusterReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new protos_common_pb.CommonReq;
      reader.readMessage(value,protos_common_pb.CommonReq.deserializeBinaryFromReader);
      msg.setCommonreq(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setClustername(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCascade(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.kubeconfig.DeleteClusterReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.kubeconfig.DeleteClusterReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.kubeconfig.DeleteClusterReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kubeconfig.DeleteClusterReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCommonreq();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      protos_common_pb.CommonReq.serializeBinaryToWriter
    );
  }
  f = message.getClustername();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCascade();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional CommonReq CommonReq = 1;
 * @return {?proto.kubeconfig.CommonReq}
 */
proto.kubeconfig.DeleteClusterReq.prototype.getCommonreq = function() {
  return /** @type{?proto.kubeconfig.CommonReq} */ (
    jspb.Message.getWrapperField(this, protos_common_pb.CommonReq, 1));
};


/**
 * @param {?proto.kubeconfig.CommonReq|undefined} value
 * @return {!proto.kubeconfig.DeleteClusterReq} returns this
*/
proto.kubeconfig.DeleteClusterReq.prototype.setCommonreq = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.kubeconfig.DeleteClusterReq} returns this
 */
proto.kubeconfig.DeleteClusterReq.prototype.clearCommonreq = function() {
  return this.setCommonreq(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.kubeconfig.DeleteClusterReq.prototype.hasCommonreq = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string ClusterName = 2;
 * @return {string}
 */
proto.kubeconfig.DeleteClusterReq.prototype.getClustername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.kubeconfig.DeleteClusterReq} returns this
 */
proto.kubeconfig.DeleteClusterReq.prototype.setClustername = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bool Cascade = 3;
 * @return {boolean}
 */
proto.kubeconfig.DeleteClusterReq.prototype.getCascade = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.kubeconfig.DeleteClusterReq} returns this
 */
proto.kubeconfig.DeleteClusterReq.prototype.setCascade = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.kubeconfig.GetConfigReq.prototype.toObject = function(opt_includeInstance) {
  return proto.kubeconfig.GetConfigReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.kubeconfig.GetConfigReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kubeconfig.GetConfigReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    commonres: (f = msg.getCommonres()) && protos_common_pb.CommonRes.toObject(includeInstance, f),
    name: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.kubeconfig.GetConfigReq}
 */
proto.kubeconfig.GetConfigReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.kubeconfig.GetConfigReq;
  return proto.kubeconfig.GetConfigReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.kubeconfig.GetConfigReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.kubeconfig.GetConfigReq}
 */
proto.kubeconfig.GetConfigReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new protos_common_pb.CommonRes;
      reader.readMessage(value,protos_common_pb.CommonRes.deserializeBinaryFromReader);
      msg.setCommonres(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.kubeconfig.GetConfigReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.kubeconfig.GetConfigReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.kubeconfig.GetConfigReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kubeconfig.GetConfigReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCommonres();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      protos_common_pb.CommonRes.serializeBinaryToWriter
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional CommonRes CommonRes = 1;
 * @return {?proto.kubeconfig.CommonRes}
 */
proto.kubeconfig.GetConfigReq.prototype.getCommonres = function() {
  return /** @type{?proto.kubeconfig.CommonRes} */ (
    jspb.Message.getWrapperField(this, protos_common_pb.CommonRes, 1));
};


/**
 * @param {?proto.kubeconfig.CommonRes|undefined} value
 * @return {!proto.kubeconfig.GetConfigReq} returns this
*/
proto.kubeconfig.GetConfigReq.prototype.setCommonres = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.kubeconfig.GetConfigReq} returns this
 */
proto.kubeconfig.GetConfigReq.prototype.clearCommonres = function() {
  return this.setCommonres(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.kubeconfig.GetConfigReq.prototype.hasCommonres = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string Name = 2;
 * @return {string}
 */
proto.kubeconfig.GetConfigReq.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.kubeconfig.GetConfigReq} returns this
 */
proto.kubeconfig.GetConfigReq.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.kubeconfig.GetConfigRes.prototype.toObject = function(opt_includeInstance) {
  return proto.kubeconfig.GetConfigRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.kubeconfig.GetConfigRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kubeconfig.GetConfigRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    commonres: (f = msg.getCommonres()) && protos_common_pb.CommonRes.toObject(includeInstance, f),
    data: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.kubeconfig.GetConfigRes}
 */
proto.kubeconfig.GetConfigRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.kubeconfig.GetConfigRes;
  return proto.kubeconfig.GetConfigRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.kubeconfig.GetConfigRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.kubeconfig.GetConfigRes}
 */
proto.kubeconfig.GetConfigRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new protos_common_pb.CommonRes;
      reader.readMessage(value,protos_common_pb.CommonRes.deserializeBinaryFromReader);
      msg.setCommonres(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.kubeconfig.GetConfigRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.kubeconfig.GetConfigRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.kubeconfig.GetConfigRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kubeconfig.GetConfigRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCommonres();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      protos_common_pb.CommonRes.serializeBinaryToWriter
    );
  }
  f = message.getData();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional CommonRes CommonRes = 1;
 * @return {?proto.kubeconfig.CommonRes}
 */
proto.kubeconfig.GetConfigRes.prototype.getCommonres = function() {
  return /** @type{?proto.kubeconfig.CommonRes} */ (
    jspb.Message.getWrapperField(this, protos_common_pb.CommonRes, 1));
};


/**
 * @param {?proto.kubeconfig.CommonRes|undefined} value
 * @return {!proto.kubeconfig.GetConfigRes} returns this
*/
proto.kubeconfig.GetConfigRes.prototype.setCommonres = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.kubeconfig.GetConfigRes} returns this
 */
proto.kubeconfig.GetConfigRes.prototype.clearCommonres = function() {
  return this.setCommonres(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.kubeconfig.GetConfigRes.prototype.hasCommonres = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string Data = 2;
 * @return {string}
 */
proto.kubeconfig.GetConfigRes.prototype.getData = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.kubeconfig.GetConfigRes} returns this
 */
proto.kubeconfig.GetConfigRes.prototype.setData = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.kubeconfig.SetConfigReq.prototype.toObject = function(opt_includeInstance) {
  return proto.kubeconfig.SetConfigReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.kubeconfig.SetConfigReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kubeconfig.SetConfigReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    commonreq: (f = msg.getCommonreq()) && protos_common_pb.CommonReq.toObject(includeInstance, f),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    data: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.kubeconfig.SetConfigReq}
 */
proto.kubeconfig.SetConfigReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.kubeconfig.SetConfigReq;
  return proto.kubeconfig.SetConfigReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.kubeconfig.SetConfigReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.kubeconfig.SetConfigReq}
 */
proto.kubeconfig.SetConfigReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new protos_common_pb.CommonReq;
      reader.readMessage(value,protos_common_pb.CommonReq.deserializeBinaryFromReader);
      msg.setCommonreq(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.kubeconfig.SetConfigReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.kubeconfig.SetConfigReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.kubeconfig.SetConfigReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kubeconfig.SetConfigReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCommonreq();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      protos_common_pb.CommonReq.serializeBinaryToWriter
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getData();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional CommonReq CommonReq = 1;
 * @return {?proto.kubeconfig.CommonReq}
 */
proto.kubeconfig.SetConfigReq.prototype.getCommonreq = function() {
  return /** @type{?proto.kubeconfig.CommonReq} */ (
    jspb.Message.getWrapperField(this, protos_common_pb.CommonReq, 1));
};


/**
 * @param {?proto.kubeconfig.CommonReq|undefined} value
 * @return {!proto.kubeconfig.SetConfigReq} returns this
*/
proto.kubeconfig.SetConfigReq.prototype.setCommonreq = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.kubeconfig.SetConfigReq} returns this
 */
proto.kubeconfig.SetConfigReq.prototype.clearCommonreq = function() {
  return this.setCommonreq(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.kubeconfig.SetConfigReq.prototype.hasCommonreq = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string Name = 2;
 * @return {string}
 */
proto.kubeconfig.SetConfigReq.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.kubeconfig.SetConfigReq} returns this
 */
proto.kubeconfig.SetConfigReq.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string Data = 3;
 * @return {string}
 */
proto.kubeconfig.SetConfigReq.prototype.getData = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.kubeconfig.SetConfigReq} returns this
 */
proto.kubeconfig.SetConfigReq.prototype.setData = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * @enum {number}
 */
proto.kubeconfig.CredentialResolverKind = {
  DEFAULT: 0,
  ENV: 1,
  IMDS: 2,
  PROFILE: 3
};

/**
 * @enum {number}
 */
proto.kubeconfig.CredentialResolverStatus = {
  CRED_RESOLVER_UNKNOWN: 0,
  CRED_REGISTERED_OK: 1,
  CRED_REGISTERED_NOT_OK: 2,
  CRED_SUGGESTION_OK: 101
};

/**
 * @enum {number}
 */
proto.kubeconfig.ClusterInformationStatus = {
  INFO_NOT_SETTED: 0,
  REGISTERED_OK: 1,
  REGISTERED_NOTOK_NO_CRED_RESOLVER: 2,
  REGISTERED_NOTOK_CRED_RES_NOTOK: 3,
  REGISTERED_UNKNOWN: 4,
  SUGGESTION_OK: 101,
  SUGGESTION_NOTOK_NO_CRED_RESOLVER: 102,
  SUGGESTION_NOTOK_CRED_RES_NOTOK: 103
};

goog.object.extend(exports, proto.kubeconfig);
